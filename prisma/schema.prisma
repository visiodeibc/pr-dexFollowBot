// Prisma schema for Supabase (PostgreSQL)
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // Use pooled URL for runtime/client; migrations use directUrl
  url       = env("DATABASE_URL")
  // Prisma migrate will prefer DIRECT_URL if provided
  directUrl = env("DIRECT_URL")
}

// Enums
enum JobStatus {
  queued
  processing
  completed
  failed
}

// Tables
model Waitlist {
  user_id           BigInt   @id @map("user_id")
  username          String?  @db.Text
  first_name        String?  @db.Text @map("first_name")
  last_name         String?  @db.Text @map("last_name")
  email             String?  @db.Text
  pref_solana_wallet String? @db.Text @map("pref_solana_wallet")
  joined_at         DateTime @default(now()) @map("joined_at")
  source            String?  @db.Text

  @@map("waitlist")
}

model Job {
  id         String    @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
  type       String    @db.Text
  chat_id    BigInt    @map("chat_id")
  payload    Json      @db.JsonB
  status     JobStatus @default(queued)
  result     Json?     @db.JsonB
  error      String?   @db.Text
  created_at DateTime  @default(now()) @map("created_at")
  updated_at DateTime  @default(now()) @map("updated_at")

  @@index([status, created_at], name: "idx_jobs_status_created")
  @@map("jobs")
}
